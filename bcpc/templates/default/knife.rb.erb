require 'rubygems'
require 'ohai'
o = Ohai::System.new
o.all_plugins

log_level                :info
log_location             STDOUT
node_name                o[:fqdn]
client_key               "/home/vagrant/chef-bcpc/.chef/#{o[:fqdn]}.pem"
validation_client_name   'chef-validator'
validation_key           '/etc/chef-server/chef-validator.pem'
chef_server_url          'https://<%= node[:bcpc][:bootstrap][:server] %>'
syntax_check_cache_path  '/home/vagrant/chef-bcpc/.chef/syntax_check_cache'
cookbook_path            '/home/vagrant/chef-bcpc/cookbooks'

# Disable the Ohai password module which explodes on a Single-Sign-On-joined system
Ohai::Config[:disabled_plugins] = [ "passwd" ]

<% if node[:bcpc][:bootstrap][:proxy] != nil -%>
no_proxy_array = ["localhost", o[:ipaddress], o[:hostname], o[:fqdn], "<%= node[:bcpc][:bootstrap][:server] %>", "<%= node[:bcpc][:bootstrap][:server] %>"]
no_proxy_array.insert("*#{o[:domain]}") unless o[:domain].nil?
no_proxy_string = no_proxy_array.uniq * ","

ENV['http_proxy'] = "<%= node[:bcpc][:bootstrap][:proxy] %>"
ENV['https_proxy'] = "<%= node[:bcpc][:bootstrap][:proxy].sub!('http','https') %>"
ENV['no_proxy'] = no_proxy_string
http_proxy ENV['http_proxy']
https_proxy ENV['https_proxy']
no_proxy no_proxy_string
<% end -%>

File.umask(0007)
