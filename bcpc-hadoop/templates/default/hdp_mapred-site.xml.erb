<?xml version="1.0"?>
<!--
################################################
#
#              Generated by Chef
#
################################################
-->
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
  <property>
    <name>mapreduce.admin.map.child.java.opts</name>
    <value>-server -Djava.net.preferIPv4Stack=true -Dhdp.version=<%= node[:bcpc][:hadoop][:distribution][:release] %></value>
    <final>true</final>
  </property>

  <property>
    <name>mapreduce.admin.user.env</name> 
    <value>LD_LIBRARY_PATH=/usr/hdp/<%= node[:bcpc][:hadoop][:distribution][:active_release] %>/hadoop/lib/native:/usr/hdp/<%= node[:bcpc][:hadoop][:distribution][:active_release] %>/hadoop/lib/native/Linux-amd64-64</value>
  </property>

  <property>
    <name>mapreduce.framework.name</name>
    <value>yarn</value>
  </property>

  <property>
    <name>mapreduce.application.classpath</name>
    <value>$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*,$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*,$PWD/mr-framework/hadoop/share/hadoop/common/*,$PWD/mr-framework/hadoop/share/hadoop/common/lib/*,$PWD/mr-framework/hadoop/share/hadoop/yarn/*,$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*,$PWD/mr-framework/hadoop/share/hadoop/hdfs/*,$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*,/usr/hdp/<%= node[:bcpc][:hadoop][:distribution][:active_release] %>/hadoop/lib/hadoop-lzo-0.6.0.<%= node[:bcpc][:hadoop][:distribution][:active_release] %>.jar,/usr/hdp/<%= node[:bcpc][:hadoop][:distribution][:active_release] %>/phoenix/phoenix-server.jar,$HADOOP_CONF_DIR</value>
  </property>

  <property>
    <name>mapreduce.application.framework.path</name>
    <value>/hdp/apps/<%= node[:bcpc][:hadoop][:distribution][:active_release] %>/mapreduce/mapreduce.tar.gz#mr-framework</value>
  </property>

  <property>
    <name>mapreduce.map.output.compress</name>
    <value>true</value>
  </property>

  <property>
    <name>mapred.map.output.compress.codec</name>  
    <value>org.apache.hadoop.io.compress.SnappyCodec</value>
  </property>

  <property>
    <name>yarn.app.mapreduce.am.log.level</name>
    <value>DEBUG</value>
  </property>

  <property>
    <name>mapreduce.jobhistory.address</name>
    <value><%="#{float_host(@hs_hosts.map{|i| i[:hostname] }.sort.first)}:10020" if not @hs_hosts.empty?%></value>
  </property>

  <property>
    <name>mapreduce.jobhistory.webapp.address</name>
    <value><%="#{float_host(@hs_hosts.map{|i| i[:hostname] }.sort.first)}:19888" if not @hs_hosts.empty?%></value>
  </property>

  <property>
    <name>yarn.app.mapreduce.am.staging-dir</name>
    <value>/user</value>
  </property>
  <% if node[:bcpc][:hadoop][:kerberos][:enable] == true then %>
  <property>
    <name>mapreduce.jobhistory.keytab</name>
    <value><%= node[:bcpc][:hadoop][:kerberos][:keytab][:dir] %>/<%= node[:bcpc][:hadoop][:kerberos][:data][:historyserver][:keytab] %></value>
  </property>
  <% if node.run_list.expand(node.chef_environment).recipes.include?("bcpc-hadoop::historyserver") %>
  <property>
    <name>mapreduce.jobhistory.principal</name>
    <value><%= node[:bcpc][:hadoop][:kerberos][:data][:historyserver][:principal] %>/<%= node[:bcpc][:hadoop][:kerberos][:data][:historyserver][:princhost] == "_HOST" ? float_host(node[:fqdn]) : node[:bcpc][:hadoop][:kerberos][:data][:historyserver][:princhost] %>@<%= node[:bcpc][:hadoop][:kerberos][:realm] %></value>
  </property>
  <% else %>
  <property>
    <name>mapreduce.jobhistory.principal</name>
    <value><%= node[:bcpc][:hadoop][:kerberos][:data][:historyserver][:principal] %>/<%=node[:bcpc][:hadoop][:kerberos][:data][:historyserver][:princhost] == "_HOST" ? "_HOST" : node[:bcpc][:hadoop][:kerberos][:data][:historyserver][:princhost]%>@<%= node[:bcpc][:hadoop][:kerberos][:realm] %></value>
  </property>
  <% end %>
  <% end %>

  <property> 
      <name>mapreduce.map.memory.mb</name> 
      <value><%= node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb'].round %></value> 
  </property> 

  <property> 
      <name>mapreduce.map.java.opts</name> 
      <value><%="-Xmx#{(0.8 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb']).round}m" %></value> 
  </property> 

  <property> 
      <name>mapreduce.reduce.memory.mb</name> 
      <value><%= 2 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb'].round %></value>
  </property> 

  <property> 
      <name>mapreduce.reduce.java.opts</name> 
      <value><%="-Xmx#{(0.8 * 2 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb']).round}m" %></value>
  </property> 

  <property> 
      <name>yarn.app.mapreduce.am.resource.mb</name> 
      <value><%= 2 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb'].round %></value> 
  </property> 

  <property>
    <name>yarn.app.mapreduce.am.command-opts</name>
    <value><%="-Xmx#{ (0.8 * 2 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb']).round}m" %></value> 
  </property>

</configuration>
